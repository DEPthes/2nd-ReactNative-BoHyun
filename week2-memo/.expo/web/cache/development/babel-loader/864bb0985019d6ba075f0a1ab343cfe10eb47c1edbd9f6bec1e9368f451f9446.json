{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MemoScreen = function MemoScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    memoText = _useState2[0],\n    setMemoText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    memoList = _useState4[0],\n    setMemoList = _useState4[1];\n  var handleSaveMemo = function handleSaveMemo() {\n    if (memoText.trim() !== '') {\n      setMemoList(function (prevList) {\n        return [].concat(_toConsumableArray(prevList), [{\n          id: Math.random().toString(),\n          text: memoText\n        }]);\n      });\n      setMemoText('');\n    }\n  };\n  var renderMemoItem = function renderMemoItem(_ref) {\n    var item = _ref.item;\n    return _jsx(View, {\n      style: styles.memoItem,\n      children: _jsx(Text, {\n        style: styles.memoText,\n        children: item.text\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        multiline: true,\n        placeholder: \"\\uBA54\\uBAA8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: memoText,\n        onChangeText: function onChangeText(text) {\n          return setMemoText(text);\n        }\n      }), _jsx(Button, {\n        title: \"\\uC800\\uC7A5\",\n        onPress: handleSaveMemo\n      })]\n    }), _jsx(FlatList, {\n      data: memoList,\n      renderItem: renderMemoItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      style: styles.memoList,\n      contentContainerStyle: styles.memoListContent\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    marginBottom: 16\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    paddingTop: 8,\n    fontSize: 16\n  },\n  memoList: {\n    flex: 1\n  },\n  memoListContent: {\n    paddingBottom: 16\n  },\n  memoItem: {\n    backgroundColor: '#f2f2f2',\n    padding: 16,\n    marginBottom: 8,\n    borderRadius: 4\n  },\n  memoText: {\n    fontSize: 16\n  }\n});\nexport default MemoScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","FlatList","Text","jsx","_jsx","jsxs","_jsxs","MemoScreen","_useState","_useState2","_slicedToArray","memoText","setMemoText","_useState3","_useState4","memoList","setMemoList","handleSaveMemo","trim","prevList","concat","_toConsumableArray","id","Math","random","toString","text","renderMemoItem","_ref","item","style","styles","memoItem","children","container","inputContainer","input","multiline","placeholder","value","onChangeText","title","onPress","data","renderItem","keyExtractor","contentContainerStyle","memoListContent","create","flex","padding","flexDirection","marginBottom","borderWidth","borderColor","borderRadius","paddingHorizontal","paddingTop","fontSize","paddingBottom","backgroundColor"],"sources":["C:/Users/LeeBoHyun/Desktop/DEPth-ReactNative/RNCourse/Components/Home/MemoScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, StyleSheet, FlatList, Text } from 'react-native';\r\n\r\nconst MemoScreen = () => {\r\n  const [memoText, setMemoText] = useState('');\r\n  const [memoList, setMemoList] = useState([]);\r\n\r\n  const handleSaveMemo = () => {\r\n    if (memoText.trim() !== '') {\r\n      setMemoList(prevList => [\r\n        ...prevList,\r\n        { id: Math.random().toString(), text: memoText }\r\n      ]);\r\n      setMemoText('');\r\n    }\r\n  };\r\n\r\n  const renderMemoItem = ({ item }) => (\r\n    <View style={styles.memoItem}>\r\n      <Text style={styles.memoText}>{item.text}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          multiline={true}\r\n          placeholder=\"메모를 입력하세요\"\r\n          value={memoText}\r\n          onChangeText={text => setMemoText(text)}\r\n        />\r\n        <Button title=\"저장\" onPress={handleSaveMemo} />\r\n      </View>\r\n      <FlatList\r\n        data={memoList}\r\n        renderItem={renderMemoItem}\r\n        keyExtractor={item => item.id}\r\n        style={styles.memoList}\r\n        contentContainerStyle={styles.memoListContent}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 8,\r\n    paddingTop: 8,\r\n    fontSize: 16,\r\n  },\r\n  memoList: {\r\n    flex: 1,\r\n  },\r\n  memoListContent: {\r\n    paddingBottom: 16,\r\n  },\r\n  memoItem: {\r\n    backgroundColor: '#f2f2f2',\r\n    padding: 16,\r\n    marginBottom: 8,\r\n    borderRadius: 4,\r\n  },\r\n  memoText: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default MemoScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAAgCZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAIN,QAAQ,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BF,WAAW,CAAC,UAAAG,QAAQ;QAAA,UAAAC,MAAA,CAAAC,kBAAA,CACfF,QAAQ,IACX;UAAEG,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;UAAEC,IAAI,EAAEf;QAAS,CAAC;MAAA,CACjD,CAAC;MACFC,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,IAAMe,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA;IAAA,IAAMC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAA,OAC5BzB,IAAA,CAACP,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAACC,QAAS;MAAAC,QAAA,EAC3B7B,IAAA,CAACF,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACpB,QAAS;QAAAsB,QAAA,EAAEJ,IAAI,CAACH;MAAI,CAAO;IAAC,CAC5C,CAAC;EAAA,CACR;EAED,OACEpB,KAAA,CAACT,IAAI;IAACiC,KAAK,EAAEC,MAAM,CAACG,SAAU;IAAAD,QAAA,GAC5B3B,KAAA,CAACT,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAACI,cAAe;MAAAF,QAAA,GACjC7B,IAAA,CAACN,SAAS;QACRgC,KAAK,EAAEC,MAAM,CAACK,KAAM;QACpBC,SAAS,EAAE,IAAK;QAChBC,WAAW,EAAC,mDAAW;QACvBC,KAAK,EAAE5B,QAAS;QAChB6B,YAAY,EAAE,SAAAA,aAAAd,IAAI;UAAA,OAAId,WAAW,CAACc,IAAI,CAAC;QAAA;MAAC,CACzC,CAAC,EACFtB,IAAA,CAACL,MAAM;QAAC0C,KAAK,EAAC,cAAI;QAACC,OAAO,EAAEzB;MAAe,CAAE,CAAC;IAAA,CAC1C,CAAC,EACPb,IAAA,CAACH,QAAQ;MACP0C,IAAI,EAAE5B,QAAS;MACf6B,UAAU,EAAEjB,cAAe;MAC3BkB,YAAY,EAAE,SAAAA,aAAAhB,IAAI;QAAA,OAAIA,IAAI,CAACP,EAAE;MAAA,CAAC;MAC9BQ,KAAK,EAAEC,MAAM,CAAChB,QAAS;MACvB+B,qBAAqB,EAAEf,MAAM,CAACgB;IAAgB,CAC/C,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMhB,MAAM,GAAG/B,UAAU,CAACgD,MAAM,CAAC;EAC/Bd,SAAS,EAAE;IACTe,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDf,cAAc,EAAE;IACdgB,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDhB,KAAK,EAAE;IACLa,IAAI,EAAE,CAAC;IACPI,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,CAAC;IACpBC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;EACZ,CAAC;EACD3C,QAAQ,EAAE;IACRkC,IAAI,EAAE;EACR,CAAC;EACDF,eAAe,EAAE;IACfY,aAAa,EAAE;EACjB,CAAC;EACD3B,QAAQ,EAAE;IACR4B,eAAe,EAAE,SAAS;IAC1BV,OAAO,EAAE,EAAE;IACXE,YAAY,EAAE,CAAC;IACfG,YAAY,EAAE;EAChB,CAAC;EACD5C,QAAQ,EAAE;IACR+C,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAenD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}